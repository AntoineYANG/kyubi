var a=(e=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(e,{get:(o,n)=>(typeof require<"u"?require:o)[n]}):e)(function(e){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+e+'" is not supported')});import y from"path";import{existsSync as u}from"fs";var i=(e,o)=>{let n=Object.assign({},e,o);for(let t in o)o[t]!==null&&o[t]!==void 0&&(typeof o[t]=="object"?n[t]=i(e[t],o[t]):n[t]=o[t]);return n};var r={blog:{basePath:"/blog"},docs:{basePath:"/docs"},wiki:{basePath:"/wiki"},extra:{basePath:"/extra"}},g=e=>typeof e=="function"?i(r,e(r)):i(r,e),p=e=>["kyubi.config.ts","kyubi.config.js","kyubi.config.json"].map(o=>y.join(e,o)).find(u),c=e=>{let o=p(e);return g(o?a(o):{})};var s=c;var f=(e={},o={})=>{let n=i(s(process.cwd()),o);return{...e,pageExtensions:[...new Set([...e.pageExtensions||[],"js","jsx","ts","tsx","md","mdx"])],webpack(t,l){return t.module===void 0?t.module={rules:[]}:t.module.rules===void 0&&(t.module.rules=[]),t.module.rules.push({test:/\.mdx?$/,use:[l.defaultLoaders.babel,{loader:"kyubi-js/loader",options:{config:n}}]}),t}}},w=f;module.exports=f;export{w as default};
//# sourceMappingURL=index.mjs.map