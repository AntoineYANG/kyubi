"use client";
/*
 * @Author: Kyusho 
 * @Date: 2024-02-15 22:51:25 
 * @Last Modified by: Kyusho
 * @Last Modified time: 2024-02-16 13:58:08
 */

import { memo, type ImgHTMLAttributes, useState, useRef, useEffect } from "react";

import { useImageViewer } from "../components/image-viewer";
import { cn } from "../utils/classnames";


export interface IImageProps extends ImgHTMLAttributes<HTMLImageElement> {}

/**
 * Automatically replaces the <img> generated by the markdown parser.
 * 
 * Features:
 * * Lazy load
 * * Prevent drag
 * * Fullscreen view on click
 */
const Image = memo<IImageProps>(function Image (props) {
  const { src, alt } = props;
  const ref = useRef<HTMLImageElement>(null);
  const [isLink, setIsLink] = useState(false);

  useEffect(() => {
    const img = ref.current;
    if (img) {
      setIsLink(Boolean(img.parentElement?.closest("a")));
    }
  }, []);
  
  const viewer = useImageViewer();

  const handleClick = () => {
    if (src && !isLink) {
      viewer.open(src);
    }
  };

  return (
    <figure className="ky-relative ky-w-full ky-h-auto ky-p-4 ky-m-0 ky-flex ky-justify-center ky-items-center">
      <img
        {...props}
        src={src}
        alt={alt}
        loading="lazy"
        draggable="false"
        onDragStart={e => e.preventDefault()}
        className={cn(
          "ky-w-full ky-h-auto ky-rounded-md ky-shadow-md ky-object-cover ky-object-center ky-select-none",
          isLink ? "" : "ky-cursor-zoom-in",
        )}
        onClick={handleClick}
        ref={ref}
      />
    </figure>
  );
});


export default Image;
