"use client";
/*
 * @Author: Kyusho 
 * @Date: 2024-02-15 22:51:25 
 * @Last Modified by: Kyusho
 * @Last Modified time: 2024-02-16 00:09:50
 */

import { memo, type ImgHTMLAttributes, useState, useEffect } from "react";

import { useImageViewer } from "../components/image-viewer";

import { cn } from "../utils/classnames";


export interface IImageProps extends ImgHTMLAttributes<HTMLImageElement> {}

/**
 * Automatically replaces the <img> generated by the markdown parser.
 * 
 * Features:
 * * Lazy load with loading placeholder
 * * Prevent drag
 * * Fullscreen view on click
 */
const Image = memo<IImageProps>(function Image (props) {
  const { src, alt } = props;
  const [isLoaded, setIsLoaded] = useState(false);
  
  const viewer = useImageViewer();

  const handleClick = () => {
    if (src) {
      viewer.open(src);
    }
  };

  useEffect(() => {
    setIsLoaded(false);
  }, [src]);

  return (
    <>
      {!isLoaded && (
        <div
          aria-hidden
          role="presentation"
          className="ky-animate-pulse ky-w-96 ky-h-96 ky-rounded-md ky-shadow-md ky-mx-auto ky-bg-gray-200 dark:ky-bg-gray-700"
        />
      )}
      <img
        {...props}
        src={src}
        alt={alt}
        loading="lazy"
        draggable="false"
        onDragStart={e => e.preventDefault()}
        className={cn(
          "ky-w-full ky-h-auto ky-rounded-md ky-shadow-md ky-object-cover ky-object-center ky-cursor-zoom-in ky-select-none",
          !isLoaded && "ky-hidden"
        )}
        onClick={handleClick}
        onLoad={() => setIsLoaded(true)}
      />
    </>
  );
});


export default Image;
